#!/usr/bin/env node

'use strict';

/**
 * 该文件用来初始化基本的应用框架
 */
const fs = require('fs');
const path = require('path');

const dir = process.cwd();

function createDirectorySync(dir, mode) {
    undefined === mode && (mode = 0o777);

    if(fs.existsSync(dir)) {
        return true;
    }

    if(createDirectorySync(path.dirname(dir))) {
        fs.mkdirSync(dir, mode);
    }

    return true;
}

/*
project structor

prject
    app
        controllers
            index
                IndexController.js
        views
            index
                index.html
        modules
        runtime
*/
const controllerPath = dir + '/app/controllers/index';
const viewPath = dir + '/app/views/index';
const mainFile = dir + '/index.js';

createDirectorySync(controllerPath);
createDirectorySync(viewPath);

// controller file
fs.writeFile(controllerPath + '/IndexController.js',
`'use strict';

const Controller = require('candyjs/web/Controller');

class IndexController extends Controller {

    run(req, res) {
        this.getView().getViewContent('index', (err, data) => {
            res.write(data);
            res.end();
        });
    }

}

module.exports = IndexController;
`,
    function(err){
        if(err) throw err;
});

// view file
fs.writeFile(viewPath + '/index.html',
`<!doctype html>
<html>
<head>
    <meta charset="utf-8">
    <title>CandyJs</title>
</head>
<body>
    <h2>Hello CandyJs</h2>
</body>
</html>
`,
    function(err){
        if(err) throw err;
});

// main file
fs.writeFile(mainFile,
`const CandyJs = require('candyjs');
const App = require('candyjs/web/Application');

new CandyJs(new App({
    'id': 1,
    'debug': true,
    'appPath': __dirname + '/app'

})).listen(2333, function(){
    console.log('listen on 2333');
});
`,
    function(err){
        if(err) throw err;
});

// done
console.log('done');
